Given two strings, a and b , that may or may not be of the same length, determine the minimum number of character deletions required to make a and b anagrams. Any characters can be deleted from either of the strings.

Input :

test cases,t
two strings a and b, for each test case
Output:

Desired O/p

Constraints :

string lengths<=10000

Note :

Anagram of a word is formed by rearranging the letters of the word.


#include <stdio.h>
#include <stdlib.h>
#include <string.h>
int main()
{
    char str[10001],str1[10001];
    int t;
    scanf("%d",&t);
    while(t--)
    {
    scanf("%s",str);
    scanf("%s",str1);
    int a[26]={0};
    int b[26]={0};
    int count=0;
    for(int i=0;i<strlen(str);i++)
    {
        a[str[i]-97]++;
    }
    for(int i=0;i<strlen(str1);i++)
    {
        b[str1[i]-97]++;
    }
    for(int i=0;i<26;i++)
    {
        if(a[i]!=b[i])
        {
            count=count+abs(a[i]-b[i]);
        }
          }
    printf("%d\n",count);
    }
    return 0;
}
